[0.025s] Invoking command in '/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/build/slam-tutorial': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/foxy /usr/bin/cmake --build /home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/build/slam-tutorial -- -j12 -l12
[0.089s] [ 50%] Built target stereo_calibration
[0.111s] [35m[1mScanning dependencies of target main_node[0m
[0.162s] [ 75%] [32mBuilding CXX object CMakeFiles/main_node.dir/executables/main.cpp.o[0m
[3.679s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:[m[K In member function â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> > SLAM_Context::get_registered_map() const[m[Kâ€™:
[3.680s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:81:26:[m[K [01;35m[Kwarning: [m[Kstructured bindings only available with â€˜[01m[K-std=c++17[m[Kâ€™ or â€˜[01m[K-std=gnu++17[m[Kâ€™
[3.680s]    81 |         for (const auto &[01;35m[K[[m[Kvoxel, voxel_block] : map_) {
[3.680s]       |                          [01;35m[K^[m[K
[3.721s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:[m[K In function â€˜[01m[Kstd::tuple<std::vector<Eigen::Matrix<double, 3, 1, 0, 3, 1>, std::allocator<Eigen::Matrix<double, 3, 1, 0, 3, 1> > >, std::vector<Eigen::Matrix<double, 3, 1, 0, 3, 1>, std::allocator<Eigen::Matrix<double, 3, 1, 0, 3, 1> > > > get_correspondence(const std::vector<Eigen::Matrix<double, 3, 1> >&, const tsl::robin_map<Eigen::Matrix<int, 3, 1>, VoxelBlock, VoxelHash>&, double)[m[Kâ€™:
[3.721s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:177:16:[m[K [01;35m[Kwarning: [m[Kstructured bindings only available with â€˜[01m[K-std=c++17[m[Kâ€™ or â€˜[01m[K-std=gnu++17[m[Kâ€™
[3.721s]   177 |     const auto [01;35m[K[[m[Ksource, target] = tbb::parallel_reduce(
[3.721s]       |                [01;35m[K^[m[K
[3.721s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:[m[K In lambda function:
[3.721s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:185:19:[m[K [01;35m[Kwarning: [m[Kstructured bindings only available with â€˜[01m[K-std=c++17[m[Kâ€™ or â€˜[01m[K-std=gnu++17[m[Kâ€™
[3.721s]   185 |             auto &[01;35m[K[[m[Ksrc, tgt] = res;
[3.721s]       |                   [01;35m[K^[m[K
[3.733s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:[m[K In lambda function:
[3.733s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:199:19:[m[K [01;35m[Kwarning: [m[Kstructured bindings only available with â€˜[01m[K-std=c++17[m[Kâ€™ or â€˜[01m[K-std=gnu++17[m[Kâ€™
[3.733s]   199 |             auto &[01;35m[K[[m[Ksrc, tgt] = a;
[3.733s]       |                   [01;35m[K^[m[K
[3.733s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:200:25:[m[K [01;35m[Kwarning: [m[Kstructured bindings only available with â€˜[01m[K-std=c++17[m[Kâ€™ or â€˜[01m[K-std=gnu++17[m[Kâ€™
[3.733s]   200 |             const auto &[01;35m[K[[m[Ksrcp, tgtp] = b;
[3.733s]       |                         [01;35m[K^[m[K
[3.796s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:[m[K In function â€˜[01m[KSophus::SE3d AlignClouds(const std::vector<Eigen::Matrix<double, 3, 1> >&, const std::vector<Eigen::Matrix<double, 3, 1> >&, double)[m[Kâ€™:
[3.797s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:231:17:[m[K [01;35m[Kwarning: [m[Kstructured bindings only available with â€˜[01m[K-std=c++17[m[Kâ€™ or â€˜[01m[K-std=gnu++17[m[Kâ€™
[3.797s]   231 |     const auto &[01;35m[K[[m[KJTJ, JTr] = tbb::parallel_reduce(
[3.797s]       |                 [01;35m[K^[m[K
[3.797s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:[m[K In lambda function:
[3.797s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:239:19:[m[K [01;35m[Kwarning: [m[Kstructured bindings only available with â€˜[01m[K-std=c++17[m[Kâ€™ or â€˜[01m[K-std=gnu++17[m[Kâ€™
[3.797s]   239 |             auto &[01;35m[K[[m[KJTJ_private, JTr_private] = J;
[3.797s]       |                   [01;35m[K^[m[K
[3.797s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:241:29:[m[K [01;35m[Kwarning: [m[Kstructured bindings only available with â€˜[01m[K-std=c++17[m[Kâ€™ or â€˜[01m[K-std=gnu++17[m[Kâ€™
[3.797s]   241 |                 const auto &[01;35m[K[[m[KJ_r, residual] = compute_jacobian_and_residual(i);
[3.798s]       |                             [01;35m[K^[m[K
[3.953s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:[m[K In function â€˜[01m[KSophus::SE3d register_frame_icp(const std::vector<Eigen::Matrix<double, 3, 1> >&, const tsl::robin_map<Eigen::Matrix<int, 3, 1>, VoxelBlock, VoxelHash>&, const SE3d&, double, double)[m[Kâ€™:
[3.953s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:270:21:[m[K [01;35m[Kwarning: [m[Kstructured bindings only available with â€˜[01m[K-std=c++17[m[Kâ€™ or â€˜[01m[K-std=gnu++17[m[Kâ€™
[3.954s]   270 |         const auto &[01;35m[K[[m[Ksrc, tgt] = get_correspondence(source, map, max_correspondence_distance);
[3.954s]       |                     [01;35m[K^[m[K
[4.004s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:[m[K In function â€˜[01m[Kstd::vector<Eigen::Matrix<double, 3, 1> > voxelize_downsample(const std::vector<Eigen::Matrix<double, 3, 1> >&, double)[m[Kâ€™:
[4.004s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:319:22:[m[K [01;35m[Kwarning: [m[Kstructured bindings only available with â€˜[01m[K-std=c++17[m[Kâ€™ or â€˜[01m[K-std=gnu++17[m[Kâ€™
[4.004s]   319 |     for (const auto &[01;35m[K[[m[Kvoxel, point] : grid) {
[4.004s]       |                      [01;35m[K^[m[K
[4.010s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:[m[K In function â€˜[01m[Kvoid RemovePointsFarFromLocation(const Vector3d&)[m[Kâ€™:
[4.010s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:352:22:[m[K [01;35m[Kwarning: [m[Kstructured bindings only available with â€˜[01m[K-std=c++17[m[Kâ€™ or â€˜[01m[K-std=gnu++17[m[Kâ€™
[4.010s]   352 |     for (const auto &[01;35m[K[[m[Kvoxel, voxel_block] : slam_ctx.map_) {
[4.010s]       |                      [01;35m[K^[m[K
[4.033s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:[m[K In member function â€˜[01m[Kvoid Map::update_localmap(std::vector<Eigen::Matrix<double, 3, 1> >&, Eigen::Matrix4d)[m[Kâ€™:
[4.033s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:409:57:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kcloud[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[4.033s]   409 | void Map::update_localmap([01;35m[Kstd::vector<Eigen::Vector3d> &cloud[m[K , Eigen::Matrix4d new_pose){
[4.033s]       |                           [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[4.033s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:409:81:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Knew_pose[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[4.033s]   409 | void Map::update_localmap(std::vector<Eigen::Vector3d> &cloud , [01;35m[KEigen::Matrix4d new_pose[m[K){
[4.033s]       |                                                                 [01;35m[K~~~~~~~~~~~~~~~~^~~~~~~~[m[K
[4.233s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:[m[K In member function â€˜[01m[Kvoid ImageSubscriberNode::stereo_image_callback(const ConstSharedPtr&, const ConstSharedPtr&)[m[Kâ€™:
[4.233s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:595:25:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kp1[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
[4.233s]   595 |         Eigen::Vector3d [01;35m[Kp1[m[K = matched_left_eigen.row(0);
[4.233s]       |                         [01;35m[K^~[m[K
[4.233s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:596:25:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kp2[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
[4.233s]   596 |         Eigen::Vector3d [01;35m[Kp2[m[K = matched_right_eigen.row(0);
[4.233s]       |                         [01;35m[K^~[m[K
[4.234s] [01m[K/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/executables/main.cpp:598:25:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Ke1[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
[4.234s]   598 |         Eigen::Vector3d [01;35m[Ke1[m[K = compute_epipole(F);
[4.234s]       |                         [01;35m[K^~[m[K
[22.971s] [100%] [32m[1mLinking CXX executable main_node[0m
[24.315s] /usr/bin/ld: CMakeFiles/main_node.dir/executables/main.cpp.o: undefined reference to symbol '_ZN3tbb10interface78internal15task_arena_base21internal_current_slotEv'
[24.315s] /usr/bin/ld: /lib/x86_64-linux-gnu/libtbb.so.2: error adding symbols: DSO missing from command line
[24.315s] collect2: error: ld returned 1 exit status
[24.316s] make[2]: *** [CMakeFiles/main_node.dir/build.make:238: main_node] Error 1
[24.317s] make[1]: *** [CMakeFiles/Makefile2:116: CMakeFiles/main_node.dir/all] Error 2
[24.317s] make: *** [Makefile:141: all] Error 2
[24.320s] Invoked command in '/home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/build/slam-tutorial' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/foxy /usr/bin/cmake --build /home/jeongmyung/slam-tutorial_ws/src/slam-tutorial/build/slam-tutorial -- -j12 -l12
